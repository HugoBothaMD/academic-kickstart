---
title: "IRT Simulation: Auditory"
author: "Hugo Botha"
date: "10/8/2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(brms)
```


## Background


## Simulation
Our IRT model will be a 2PL one, with different discrimination and easiness among items. 

$\mu \sim logistic(\alpha*\eta)$ where $\eta \sim \theta + \xi$

We force $\alpha$ to be positive by modelling *logalpha* and then exponentiating the result ($\alpha = exp(log \alpha)$)







```{r}
#control.mean=control.intercept+control.beta.age*control.age+control.beta.male*male+control.beta.tiv*tiv
#control.sd=0.3

n=10
groups=2
items=10


data=crossing(id=c(paste0("c",str_pad(c(1:n),side = "left",width = 2,pad = "0")),paste0("p",str_pad(c(1:n),side = "left",width = 2,pad = "0"))),item=c(paste0("i",str_pad(c(1:items),side = "left",width = 2,pad = "0")))) %>%
  mutate(dx=rep(c("c","p"),each=(n*items)),
         type=rep(rep(c("a","b"),each=5),n*groups),
         age=rnorm(n = n(),0,1),
         r2=1)


formula_2pl <- bf(r2 ~ exp(logalpha) * eta,
                  eta ~ 1 + dx+type + (0+dx |i| item) + (0+type | id),
                  logalpha ~ 1 + (1 |i| item),
                  nl = TRUE
                  ) 

b=get_prior(formula_2pl,data,brmsfamily("bernoulli", "logit"))

prior=set_prior("lkj(0.8)",class = "cor", group = "item")+
  set_prior("lkj(1)",class = "cor", group = "id")+
  set_prior("normal(0.25,0.25)",class = "b", coef = "Intercept", nlpar = "eta")+
  set_prior("normal(0.65,0.25)",class = "b", coef = "dxp", nlpar = "eta")+
  set_prior("normal(0.15,0.25)",class = "b", coef = "typeb", nlpar = "eta")+
  set_prior("normal(0,0.1)",class="sd",group =  "id", nlpar = "eta", coef = "typea")+
  set_prior("normal(0,0.5)",class="sd",group =  "id", nlpar = "eta", coef = "typeb")+
  set_prior("normal(0,0.1)",class="sd",group =  "item", nlpar = "eta", coef = "dxc")+
  set_prior("normal(0,0.3)",class="sd",group =  "item", nlpar = "eta", coef = "dxp")+
  set_prior("normal(0,0.5)",class="b",coef =  "Intercept", nlpar = "logalpha")+
  set_prior("normal(0,0.5)",class="sd",group =  "item",coef =  "Intercept", nlpar = "logalpha")


model_2pl= brm(formula_2pl,sample_prior="only",prior = prior,iter = 1000,warmup = 500,data = data,family = brmsfamily("bernoulli", "logit"))

newr2=predict(model_2pl, newdata = data, summary=FALSE, nsamples=1)[1,]

data.sim=data %>%
  mutate(r2=newr2)

prior=set_prior("lkj(1)",class = "cor", group = "item")+
  set_prior("lkj(1)",class = "cor", group = "id")+
  set_prior("normal(0,1)",class = "b", coef = "Intercept", nlpar = "eta")+
  set_prior("normal(0,2)",class = "b", coef = "dxp", nlpar = "eta")+
  set_prior("normal(0,2)",class = "b", coef = "typeb", nlpar = "eta")+
  set_prior("normal(0,1)",class="sd",group =  "id", nlpar = "eta", coef = "typea")+
  set_prior("normal(0,1)",class="sd",group =  "id", nlpar = "eta", coef = "typeb")+
  set_prior("normal(0,1)",class="sd",group =  "item", nlpar = "eta", coef = "dxc")+
  set_prior("normal(0,1)",class="sd",group =  "item", nlpar = "eta", coef = "dxp")+
  set_prior("normal(0,1)",class="b",coef =  "Intercept", nlpar = "logalpha")+
  set_prior("normal(0,1)",class="sd",group =  "item",coef =  "Intercept", nlpar = "logalpha")
model_2pl_sim= brm(formula_2pl,prior = prior,iter = 1000,warmup = 500,data = data.sim,family = brmsfamily("bernoulli", "logit"))



```
