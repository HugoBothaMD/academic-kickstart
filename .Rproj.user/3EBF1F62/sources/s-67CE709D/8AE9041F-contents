---
title: "Artificial Intelligence for Speech Based Disease Detection"
author:
  - name: Hugo Botha, MD
    number: 1,2
    corresponding: yes
  - name: Joseph R. Duffy, PhD
    number: 3
  - name: Heather M. Clark
    number: 3
  - name: Julie A. Stierwalt, PhD
    number: 3
  - name: Rene Utianski, PhD
    number: 3
  - name: Christopher P.  Tommaso, MS
    number: 2
  - name: David T. Jones, MD
    number: 1,2
institute:
  - name: Behavioral Neurology Division, Department of Neurology, Mayo Clinic, Rochester, MN
    number: 1
  - name: Artificial Intelligence Group, Department of Neurology, Mayo Clinic, Rochester, MN
    number: 2
  - name: Speech Pathology Division, Department of Neurology, Mayo Clinic, Rochester, MN
    number: 3
corresponding: "**Current version**: `r format(Sys.time(), '%B %d, %Y')`; **Corresponding author**: botha.hugo@mayo.edu."
abstract: >
  \textbf{Summary:} \newline
  This proposal aims to use a fundamentally human phenomenon – spoken language – as a means to detect disease, monitor risk, assess treatment response, and prognosticate. This will be achieved by deriving a latent space from speech characteristics, including raw temporal acoustic measures as well as derived quantities, and using our unparalleled domain expertise to deeply annotate this space. This will facilitate automated characterization of new speech samples, allowing for probabilistic speech digital diagnostics. Coupled with Mayo Clinic Knowledge, the benefits plentiful: from itinerary optimization based on a mobile speech sample; to integrating with neurologic and systemic digital diagnostics on site and remotely; to disease and therapy monitoring for clinical and trial patients. Augmenting our expertise in neurology and speech pathology with artificial intelligence will allow us to provide patients all over the world the Mayo Clinic experience. 
bibliography: ai-speech.bib
csl: neurology.csl
header-includes:
   - \usepackage{booktabs}
   - \usepackage{threeparttable}
   - \usepackage{hyperref}
   - \usepackage{bookmark}
   - \usepackage{amsmath}
   - \usepackage{graphicx}
   - \usepackage{amssymb}
   - \usepackage{array}   
   - \usepackage{caption}
   - \usepackage{graphicx}
   - \usepackage{siunitx}
   - \usepackage[table]{xcolor}
   - \usepackage{multirow}
   - \usepackage{hhline}
   - \usepackage{calc}
   - \usepackage{tabularx}
   - \usepackage{colortbl}
   - \usepackage{multirow}
   - \usepackage{hhline}
   - \usepackage{calc}
   - \usepackage{tabulary}
   - \usepackage{threeparttable}
   - \usepackage{wrapfig}
   - \usepackage{microtype}
   - \setcitestyle{super,open={},close={}}
   - \DeclareUnicodeCharacter{92}{\"}
   - \renewcommand{\thefootnote}{\textit{\alph{footnote}}}
citecolor: olive
editor_options:
  chunk_output_type: console
date: "`r format(Sys.time(), '%B %d, %Y')`"  
output:  
  pdf_document:
    
    citation_package: natbib
    fig_caption: true
    keep_tex: true
    latex_engine: pdflatex
    template: default-academic.tex
    includes:  
      in_header: preamble-latex.tex
---

```{r}
library(tidyverse)
library(brms)
library(tidybayes)
library(bayesplot)
```



# Amyloid ICs
For the models exploring the relationship between *amyloid* and clinical/demograpic measures it makes the most sense to focus on the CU participants. This is because all CI will be $A \beta +$. So, a model with E4, Age, Sex, etc in CU will be first. Next we can have a model comparing ICs between groups just to show there really isn't a difference, and we can choose on to include in later tau models. That would be a amyloid *with group* model.
(1) Predicting amyloid with clinical variables. *Done, loaded as model_amyloid_CU*
    $$Load \sim 1 + IC + s(Age_s, by = E4, k = 5) + E4 + (1 | subid_date)$$
      
```{r}
model_amyloid_CU<-read_rds('model_amyloid_cu_1.2.rds')

# Alternative model
amyloidtau_data=final_data %>%
  select(dx_simple,Age,subid_date,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35,
         AmyloidPost=Amyloid_IC_6,AmyloidAnt=Amyloid_IC_4,AmyloidVis=Amyloid_IC_3,male,e4) %>%
  mutate(Age_s=my_scale(Age),Sex=as.factor(ifelse(male==1,"Male","Female")),E4=as.factor(ifelse(e4==1,"Pos","Neg"))) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNpos","CNneg"),"CU","exclude")) %>%
  select(-male,-e4) %>%
  filter(!dx_simple=="exclude") %>%
  gather(IC,Load,AmyloidPost,AmyloidAnt,AmyloidVis) %>%
  mutate(IC=as.factor(IC),dx_simple=as.factor(dx_simple))

model_prior_a<-c(set_prior("normal(0,1)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sds"))


amyloid_formula_8=bf(Load~1+s(Age_s,k=6,by=E4)+E4+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloid_8=brm(amyloid_formula_8,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloid_8=add_criterion(amyloid_8,"waic")
amyloid_8=add_criterion(amyloid_8,"loo")
amyloid_8$R2=bayes_R2(amyloid_8)
saveRDS(amyloid_8,"amyloid_8.rds")



model_prior_a<-c(set_prior("normal(0,1)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="b",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sds"))


amyloid_formula_8.1=bf(Load~1+s(Age_s,k=6,by=E4)+E4+IC+ (1 | subid_date),sigma~1+IC)
amyloid_8.1=brm(amyloid_formula_8.1,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 8000,
                         warmup = 2500,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))
amyloid_8.1=add_criterion(amyloid_8.1,"waic")
amyloid_8.1=add_criterion(amyloid_8.1,"loo")
amyloid_8.1$R2=bayes_R2(amyloid_8.1)
saveRDS(amyloid_8.1,"amyloid_8.1.rds")

amyloid_formula_9.1=bf(Load~1+s(Age_s,k=6,by=E4)+E4+Sex+IC+ (1 | subid_date),sigma~1+IC)
amyloid_9.1=brm(amyloid_formula_9.1,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 8000,
                         warmup = 2500,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))
amyloid_9.1=add_criterion(amyloid_9.1,"waic")
amyloid_9.1=add_criterion(amyloid_9.1,"loo")
amyloid_9.1$R2=bayes_R2(amyloid_9.1)
saveRDS(amyloid_9.1,"amyloid_9.1.rds")



amyloid_formula_9=bf(Load~1+s(Age_s,k=6,by=E4)+E4+Sex+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloid_9=brm(amyloid_formula_9,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 6000,
                         warmup = 3500,
                         control = list(adapt_delta = 0.99,max_treedepth = 15))
amyloid_9=add_criterion(amyloid_9,"waic")
amyloid_9=add_criterion(amyloid_9,"loo")
amyloid_9$R2=bayes_R2(amyloid_9)
saveRDS(amyloid_9,"amyloid_9.rds")

```  

(2) Predicting amyloid with clinical variables and group *Done, loaded as model_amyloid_All*
    $$Load \sim 1 + IC + s(Age_s, by = E4, k = 5) + E4 + (1 | subid_date) + (1 + IC + E4 | dx)$$
```{r}
model_amyloid_All<-read_rds('model_amyloid_allgroup_1.2_new.rds')


amyloidtau_data=final_data %>%
  select(dx_simple,Age,subid_date,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35,
         AmyloidPost=Amyloid_IC_6,AmyloidAnt=Amyloid_IC_4,AmyloidVis=Amyloid_IC_3,male,e4) %>%
  mutate(Age_s=my_scale(Age),Sex=as.factor(ifelse(male==1,"Male","Female")),E4=as.factor(ifelse(e4==1,"Pos","Neg"))) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNpos","CNneg"),"CU",dx_simple)) %>%
  select(-male,-e4) %>%
  gather(IC,Load,AmyloidPost,AmyloidAnt,AmyloidVis) %>%
  mutate(IC=as.factor(IC),dx_simple=as.factor(dx_simple))

model_prior_a<-c(set_prior("normal(0,1)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="b",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sds"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"))


amyloid_all_formula_8.1=bf(Load~1+s(Age_s,k=6,by=E4)+E4+IC+s(IT,k=6)+(1 | subid_date)+(1+IC+E4 | dx_simple),sigma~1+IC+(1+IC|dx_simple))
amyloid_all_8.1=brm(amyloid_all_formula_8.1,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))
amyloid_all_8.1=add_criterion(amyloid_all_8.1,"waic")
amyloid_all_8.1=add_criterion(amyloid_all_8.1,"loo")
amyloid_all_8.1$R2=bayes_R2(amyloid_all_8.1)
saveRDS(amyloid_all_8.1,"amyloid_all_8.1.rds")





model_prior_a<-c(set_prior("normal(0,1)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="b",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sds"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
))


amyloid_all_formula_8.2=bf(Load~1+s(Age_s,k=6,by=E4)+E4+IC+s(IT,k=6)+(1 | subid_date),sigma~1+IC)
amyloid_all_8.2=brm(amyloid_all_formula_8.2,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))
amyloid_all_8.2=add_criterion(amyloid_all_8.2,"waic")
amyloid_all_8.2=add_criterion(amyloid_all_8.2,"loo")
amyloid_all_8.2$R2=bayes_R2(amyloid_all_8.2)
saveRDS(amyloid_all_8.2,"amyloid_all_8.2.rds")

```  


# Tau ICs
Here again I think focussing first on CU makes sense. We can include all ICs and look at demographic effects etc. Then we can once again include all patients and groups to show how the ICs capture heterogeneity. Some ICs will appear useless and they can be removed from later models. We can also have a simpler subset of patients and run a classification here.
(1) Predicting tau with clinical variables. *Done*

```{r}
model_tau_CU<-read_rds('model_tau_cu_1.8.rds')
```  

(2) Predicting tau with clinical variables and group. *Done*

```{r}
model_tau_All<-read_rds('model_tau_allgroup_1.3.rds')



### Plot MC old ###
newdata<-expand_grid(E4=unique(model_tau_All$data$E4),
                     Sex=unique(model_tau_All$data$Sex),
                     Age_s=0,
                     IC=unique(model_tau_All$data$IC),
                     dx=unique(model_tau_All$data$dx)
)

var_of_interest="dx"
n=200




fitted_results<-fitted(model_tau_All,newdata = newdata,nsamples = n,summary = F,re_formula = ~(1 + IC * Age_s + IC * Sex + E4 * IC || dx),allow_new_levels=T)
temp_conditions_=make_conditions(newdata,names(newdata))[1,]
for(eachrow in 1:nrow(newdata)){
  tmp_df=newdata %>% slice(eachrow) %>% mutate_all(.funs = function(x) {as.character(x)})
  temp_conditions_=rbind(temp_conditions_,make_conditions(x = tmp_df,vars = names(newdata)))
  
}
temp_conditions=newdata %>% add_column(.,cond__=slice(temp_conditions_,2:n()) %>% select(cond__) %>% .[,1])

dimnames(fitted_results)[[2]]<-temp_conditions$cond__

results<-fitted_results %>% 
  as.tibble() %>%
  mutate(sample=c(1:n)) %>%
  gather(Var,Effect,-sample) %>%
  mutate(myvar=str_extract(Var,paste0(var_of_interest," = [A-z]+"))) %>%
  mutate(Var=str_remove(Var,paste0(var_of_interest," = [A-z]+"))) %>%
  mutate(byvar1=str_extract(Var,paste0("IC"," = [A-z]+[0-9]{0,100}"))) %>%
  mutate(Var=str_remove(Var,paste0("IC"," = [A-z]+[0-9]{0,100}"))) %>%
  separate(myvar,into = c("shit","my_var_of_interest"),sep = " = ") %>%
  separate(byvar1,into = c("shit","by_var_of_interest1"),sep = " = ") %>%
  select(-shit)

results_sum<-results %>%
  ungroup() %>%
  group_by(my_var_of_interest,by_var_of_interest1) %>%
  summarise(middle=median(Effect),
            lower=quantile(Effect,0.05),
            upper=quantile(Effect,0.95))


hb_colorblind<-c('#B66DFF',
                 '#490092',
                 
                 '#009292',
                 '#006DDB',
                 
                 '#000000',
                 
                 '#920000',
                 '#924900',
                 '#FF6DB6',
                 
                 "#DB6D00")




png(filename = "IC_intercept_by_dx_old.png",res = 500, units = "in",width = 15,height = 3.5,type = "cairo")
results %>% 
  #filter(!by_var_of_interest1 %in% c("nTau_IC_31","nTau_IC_33","nTau_IC_13","nTau_IC_29","nTau_IC_35")) %>%
  ungroup() %>% mutate(dx_simple=factor(my_var_of_interest,levels=c("CU","MCI_a","MCI_na","Other","ADCS_A","ADCS_V","ADCS_L","ADCS_D")),
                       IC=factor(by_var_of_interest1,
                                levels = c("nTau_IC_10","nTau_IC_21","nTau_IC_20","nTau_IC_4","nTau_IC_8","nTau_IC_9","nTau_IC_41","nTau_IC_11","nTau_IC_19","nTau_IC_31","nTau_IC_33","nTau_IC_13","nTau_IC_29","nTau_IC_35"),
                                 labels = c("IT","R PT","L PT", " R O", "L O", "PF", "SF", "SP", "MP", "SM","LL","ST","MT","DV"))) %>%
  ggplot(aes(y = Effect, color = dx_simple, x=IC)) +
  stat_pointinterval(.width = c(.9),size=6,position = position_dodge(.7)) + 
  #scale_color_brewer(palette = "Set1",name="Diagnosis")+
  theme_fivethirtyeight()+
  scale_color_manual(values = hb_colorblind,name="Diagnosis")+
  ylab("Intercept\n(Median & 90% HDI)")+
  xlab("Component")+
  theme(legend.position = "bottom",axis.text = element_text(size=rel(1.3)),axis.title = element_text(face = "bold",size = rel(1.1)),plot.title = element_text(hjust = 0.5,size = rel(1.1)),plot.subtitle = element_text(hjust = 0.5))+
  ggtitle(label = "Conditional Effect of Diagnosis on Tau IC Load",subtitle = "Multilevel model incl. Age, Sex & E4")+
  theme(panel.background = element_rect(fill = "white"),
        plot.background = element_rect(fill = "white"),
        legend.key = element_rect(fill = "white"),
        legend.background = element_rect(fill = "white"))
dev.off()


```  

```{r}
# But what if it...wasn't done...

tauamyloid_data=final_data %>%
  select(dx_simple,Age,subid_date,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35,
         AmyloidPost=Amyloid_IC_6,AmyloidAnt=Amyloid_IC_4,AmyloidVis=Amyloid_IC_3,male,e4) %>%
  mutate(Age_s=my_scale(Age),Sex=as.factor(ifelse(male==1,"Male","Female")),E4=as.factor(ifelse(e4==1,"Pos","Neg"))) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNpos","CNneg"),"CU",dx_simple)) %>%
  select(-male,-e4) %>%
  gather(IC,Load,-Age_s,-E4,-Sex,-starts_with("Amyloid"),-dx_simple,-Age,-subid_date) %>%
  mutate(IC=as.factor(IC),dx_simple=as.factor(dx_simple))

model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
))

tau_formula_19=bf(Load~1+Age_s+Sex+E4+(1+Age_s+Sex+E4|dx_simple)+(1+Sex|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tau_19=brm(tau_formula_19,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tau_19=add_criterion(tau_19,"waic")
tau_19=add_criterion(tau_19,"loo")
tau_19$R2=bayes_R2(tau_19)
saveRDS(tau_19,"tau_19")




tau_formula_16=bf(Load~1+Age_s+(1+Age_s|dx_simple)+(1|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tau_16=brm(tau_formula_16,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tau_16=add_criterion(tau_16,"waic")
tau_16=add_criterion(tau_16,"loo")
tau_16$R2=bayes_R2(tau_16)
saveRDS(tau_16,"tau_16")







tau_formula_17=bf(Load~1+Age_s+Sex+(1+Age_s+Sex|dx_simple)+(1|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tau_17=brm(tau_formula_17,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tau_17=add_criterion(tau_17,"waic")
tau_17=add_criterion(tau_17,"loo")
tau_17$R2=bayes_R2(tau_17)
saveRDS(tau_17,"tau_17")




tau_formula_20=bf(Load~1+Age_s+Sex+(1+Age_s+Sex|dx_simple)+(1+Age_s+Sex|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tau_20=brm(tau_formula_20,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tau_20=add_criterion(tau_20,"waic")
tau_20=add_criterion(tau_20,"loo")
tau_20$R2=bayes_R2(tau_20)
saveRDS(tau_20,"tau_20")




tau_formula_21=bf(Load~1+Age_s+(1+Age_s|dx_simple)+(1+Age_s|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tau_21=brm(tau_formula_21,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tau_21=add_criterion(tau_21,"waic")
tau_21=add_criterion(tau_21,"loo")
tau_21$R2=bayes_R2(tau_21)
saveRDS(tau_21,"tau_21")


loo_compare(tau_16,tau_17,tau_19,tau_20,tau_21,criterion = "waic")



```

(3) Predicting simple ADNI style Dx

```{r}

# Simplest: predicting dx using only tau pet
predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A"))

model_formula=bf(dx_simple ~ 1+IT+RPT+LPT+RO+LO+PF+SF+SP+MP+LL+ST+DV)
get_prior(model_formula,predict_data,categorical())
predict_mc_model1=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p1=predict(predict_mc_model1) %>%
  as.data.frame()

p1=p1 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)



predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","MCI_a","ADCS_A"))  %>%
  mutate(dx_simple=ifelse(dx_simple=="CNneg",dx_simple,"CI"))

model_formula=bf(dx_simple ~ 1+IT+RPT+LPT+RO+LO+PF+SF+SP+MP+LL+ST+DV)
predict_mc_model1.1=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p1.1=predict(predict_mc_model1.1) %>%
  as.data.frame()

p1.1=p1.1 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)


caret::confusionMatrix(table(p1.1$Actual,p1.1$Prediction))


predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A"))  %>%
  mutate(dx_simple=ifelse(dx_simple%in% c("CNneg","CNpos"),"CU","CI"))

model_formula=bf(dx_simple ~ 1+IT+RPT+LPT+RO+LO+PF+SF+SP+MP+LL+ST+DV)
predict_mc_model1.2=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p1.2=predict(predict_mc_model1.2) %>%
  as.data.frame()

p1.2=p1.2 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)

caret::confusionMatrix(table(p1.2$Actual,p1.2$Prediction))




predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A")) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNneg","CNpos"),dx_simple,"CI"))

model_formula=bf(dx_simple ~ 1+IT+RPT+LPT+RO+LO+PF+SF+SP+MP+LL+ST+DV)
predict_mc_model2=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p2=predict(predict_mc_model2) %>%
  as.data.frame()

p2=p2 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)

table(p2$Actual,p2$Prediction)

# Slightly more: predicting dx using tau pet and age
predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A"))

model_formula=bf(dx_simple ~ 1+Age+IT+RPT+LPT+RO+LO+PF+SF+SP+MP+LL+ST+DV)
get_prior(model_formula,predict_data,categorical())
predict_mc_model3=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p3=predict(predict_mc_model3) %>%
  as.data.frame()

p3=p3 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)

table(p3$Actual,p3$Prediction)

# Final models: predicting dx using just temporal, one extra temporal and age
predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A"))

model_formula=bf(dx_simple ~ 1+IT*MP)
get_prior(model_formula,predict_data,categorical())
predict_mc_model4=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p4=predict(predict_mc_model4) %>%
  as.data.frame()

p4=p4 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)

table(p4$Actual,p4$Prediction)






predict_data=final_data %>%
  select(dx_simple,Age,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35) %>%
  filter(dx_simple %in% c("CNneg","CNpos","MCI_a","ADCS_A")) %>%
  mutate(Age_s=my_scale(Age))

model_formula=bf(dx_simple ~ 1+Age_s*IT*MP)

predict_mc_model5=brm(model_formula,
                         predict_data,
                         categorical(),
                         #prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))


p5=predict(predict_mc_model5) %>%
  as.data.frame()

p5=p5 %>% 
  mutate(Sub=1:n()) %>%
  gather(Case,Prob,-Sub) %>%
  mutate(Prediction=str_extract(Case,pattern = "(?<=P\\(Y = )[A-z]+")) %>%
  group_by(Sub) %>%
  filter(Prob==max(Prob)) %>%
  select(-Case,-Prob) %>%
  distinct() %>%
  arrange(Sub) %>%
  add_column(Age=predict_data$Age) %>%
  add_column(Actual=predict_data$dx_simple)

table(p5$Actual,p5$Prediction)



```



# Amyloid-Tau interactions
We need one model in CU showing how temporal and extra temporal tau predicts amyloid, and one how an amyloid components predicts tau. Then, in all the patients, we fit the sigmoidal model one. Lastly we take the three timepoint cases and fit a line for amyloid over time with temporal tau as a time varying covariate

(1) Predicting amyloid while including temporal tau
```{r}
library(tidyverse)
library(brms)

my_scale=function(x){
  p=(x-mean(x))/sd(x)
  return(p)
}

# data
amyloidtau_data=final_data %>%
  select(dx_simple,Age,subid_date,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35,
         AmyloidPost=Amyloid_IC_6,AmyloidAnt=Amyloid_IC_4,AmyloidVis=Amyloid_IC_3,male,e4) %>%
  mutate(Age_s=my_scale(Age),Sex=as.factor(ifelse(male==1,"Male","Female")),E4=as.factor(ifelse(e4==1,"Pos","Neg"))) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNpos","CNneg"),"CU",dx_simple)) %>%
  select(-male,-e4) %>%
  gather(IC,Load,AmyloidPost,AmyloidAnt,AmyloidVis) %>%
  mutate(IC=as.factor(IC),dx_simple=as.factor(dx_simple))

# formulas
amyloidtau_formula_1=bf(Load~1+Age_s+IT+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_formula_2=bf(Load~1+Age_s+E4+IT+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_formula_3=bf(Load~1+Age_s+Sex+E4+IT+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))

model_prior_a<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"))

amyloidtau_1=brm(amyloidtau_formula_1,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_1=add_criterion(amyloidtau_1,"waic")
amyloidtau_1=add_criterion(amyloidtau_1,"loo")
amyloidtau_1$R2=bayes_R2(amyloidtau_1)
saveRDS(amyloidtau_1,"amyloidtau_1.rds")


amyloidtau_2=brm(amyloidtau_formula_2,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_2=add_criterion(amyloidtau_2,"waic")
amyloidtau_2=add_criterion(amyloidtau_2,"loo")
amyloidtau_2$R2=bayes_R2(amyloidtau_2)
saveRDS(amyloidtau_2,"amyloidtau_2.rds")

amyloidtau_3=brm(amyloidtau_formula_3,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_3=add_criterion(amyloidtau_3,"waic")
amyloidtau_3=add_criterion(amyloidtau_3,"loo")
amyloidtau_3$R2=bayes_R2(amyloidtau_3)
saveRDS(amyloidtau_3,"amyloidtau_3.rds")



amyloidtau_formula_4=bf(Load~1+Age_s+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_formula_5=bf(Load~1+Age_s+E4+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_formula_6=bf(Load~1+Age_s+Sex+E4+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))


model_prior_a<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,2)",
          class="sds"))

amyloidtau_4=brm(amyloidtau_formula_4,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_4=add_criterion(amyloidtau_4,"waic")
amyloidtau_4=add_criterion(amyloidtau_4,"loo")
amyloidtau_4$R2=bayes_R2(amyloidtau_4)
saveRDS(amyloidtau_4,"amyloidtau_4.rds")


amyloidtau_5=brm(amyloidtau_formula_5,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_5=add_criterion(amyloidtau_5,"waic")
amyloidtau_5=add_criterion(amyloidtau_5,"loo")
amyloidtau_5$R2=bayes_R2(amyloidtau_5)
saveRDS(amyloidtau_5,"amyloidtau_5.rds")


amyloidtau_6=brm(amyloidtau_formula_6,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_6=add_criterion(amyloidtau_6,"waic")
amyloidtau_6=add_criterion(amyloidtau_6,"loo")
amyloidtau_6$R2=bayes_R2(amyloidtau_6)
saveRDS(amyloidtau_6,"amyloidtau_6.rds")





amyloidtau_formula_7=bf(Load~1+Age_s*E4+Sex+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_7=brm(amyloidtau_formula_7,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_7=add_criterion(amyloidtau_7,"waic")
amyloidtau_7=add_criterion(amyloidtau_7,"loo")
amyloidtau_7$R2=bayes_R2(amyloidtau_7)
saveRDS(amyloidtau_7,"amyloidtau_7.rds")




amyloidtau_formula_8=bf(Load~1+s(Age_s,k=6,by=E4)+E4+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_8=brm(amyloidtau_formula_8,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_8=add_criterion(amyloidtau_8,"waic")
amyloidtau_8=add_criterion(amyloidtau_8,"loo")
amyloidtau_8$R2=bayes_R2(amyloidtau_8)
saveRDS(amyloidtau_8,"amyloidtau_8.rds")




amyloidtau_formula_9=bf(Load~1+s(Age_s,k=6,by=E4)+E4+Sex+s(IT,k=6)+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))
amyloidtau_9=brm(amyloidtau_formula_9,
                         amyloidtau_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior = model_prior_a,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
amyloidtau_9=add_criterion(amyloidtau_9,"waic")
amyloidtau_9=add_criterion(amyloidtau_9,"loo")
amyloidtau_9$R2=bayes_R2(amyloidtau_9)
saveRDS(amyloidtau_9,"amyloidtau_9.rds")


loo_compare(amyloidtau_1,amyloidtau_2,amyloidtau_3,amyloidtau_4,amyloidtau_5,amyloidtau_6,amyloidtau_7,amyloidtau_8,criterion = "waic")
loo_compare(amyloidtau_1,amyloidtau_2,amyloidtau_3,amyloidtau_4,amyloidtau_5,amyloidtau_6,amyloidtau_7,amyloidtau_8,criterion = "loo")



```




(2) Predicting tau while including one amyloid

```{r}
library(tidyverse)
library(brms)

my_scale=function(x){
  p=(x-mean(x))/sd(x)
  return(p)
}

# data
tauamyloid_data=final_data %>%
  select(dx_simple,Age,subid_date,IT=nTau_IC_10,RPT=nTau_IC_21,LPT=nTau_IC_20,RO=nTau_IC_4,LO=nTau_IC_8,PF=nTau_IC_9,SF=nTau_IC_41,SP=nTau_IC_11,MP=nTau_IC_19,LL=nTau_IC_33,ST=nTau_IC_13,DV=nTau_IC_35,
         AmyloidPost=Amyloid_IC_6,AmyloidAnt=Amyloid_IC_4,AmyloidVis=Amyloid_IC_3,male,e4) %>%
  mutate(Age_s=my_scale(Age),Sex=as.factor(ifelse(male==1,"Male","Female")),E4=as.factor(ifelse(e4==1,"Pos","Neg"))) %>%
  mutate(dx_simple=ifelse(dx_simple %in% c("CNpos","CNneg"),"CU",dx_simple)) %>%
  select(-male,-e4) %>%
  gather(IC,Load,-Age_s,-E4,-Sex,-starts_with("Amyloid"),-dx_simple,-Age,-subid_date) %>%
  mutate(IC=as.factor(IC),dx_simple=as.factor(dx_simple))

# formulas
tauamyloid_formula_1=bf(Load~1+Age_s+Sex+E4+AmyloidPost+(1|IC)+ (1 | subid_date),sigma~1+(1 | IC))

tauamyloid_formula_2=bf(Load~1+Age_s+Sex+E4+AmyloidPost+(1+AmyloidPost|IC)+ (1 | subid_date),sigma~1+(1 | IC))
tauamyloid_formula_3=bf(Load~1+Age_s+Sex+E4+AmyloidPost+(1+Age_s+AmyloidPost|IC)+ (1 | subid_date),sigma~1+(1 | IC))
tauamyloid_formula_4=bf(Load~1+Age_s+Sex+E4+AmyloidPost+(1+Age_s+Sex+E4+AmyloidPost|IC)+ (1 | subid_date),sigma~1+(1 | IC))

tauamyloid_formula_5=bf(Load~1+Age_s+Sex+E4+s(AmyloidPost,k=7)+(1+Age_s+AmyloidPost | IC)+ (1 | subid_date), sigma~1+(1 | IC))

tauamyloid_formula_6=bf(Load~1+Age_s+Sex+E4+s(AmyloidPost,k=7)+(1+Age_s+AmyloidPost|IC)+(1|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC))
tauamyloid_formula_7=bf(Load~1+Age_s+s(AmyloidPost,k=7)+(1+Age_s+AmyloidPost|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC))
tauamyloid_formula_8=bf(Load~1+Age_s+s(AmyloidPost,k=7)+(1+Age_s+AmyloidPost|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))








tauamyloid_formula_9=bf(Load ~ 1 + IC * Age_s + IC * Sex + E4 * IC +s(AmyloidPost,k=7) + (1 | subid_date)  + (1 + IC * Age_s + IC * Sex + E4 * IC || dx), sigma ~ 1 + IC + dx)

# run and save them
tauamyloid_9=brm(tauamyloid_formula_9,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_9,"tauamyloid_9.rds")
tauamyloid_9=read_rds("tauamyloid_9.rds")


get_prior(tauamyloid_formula_4,tauamyloid_data,gaussian())
model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma")
)
tauamyloid_1=brm(tauamyloid_formula_1,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         #sample_prior = "only",
                         prior = model_prior,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_1,"tauamyloid_1.rds")

tauamyloid_2=brm(tauamyloid_formula_2,
                         tauamyloid_data,
                         gaussian(),
                         prior = model_prior,
                         chains = 4,
                         cores = 4,
                         iter = 3500,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_2,"tauamyloid_2.rds")

tauamyloid_3=brm(tauamyloid_formula_3,
                         tauamyloid_data,
                         gaussian(),
                         prior = model_prior,
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_3,"tauamyloid_3.rds")

tauamyloid_4=brm(tauamyloid_formula_4,
                         tauamyloid_data,
                         gaussian(),
                         prior = model_prior,
                         chains = 4,
                         cores = 4,
                         iter = 2000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_4,"tauamyloid_4.rds")







get_prior(tauamyloid_formula_5,tauamyloid_data,gaussian())
model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,3)",
          class="sds"),
set_prior("lkj(4)",
          class="cor"
)
)

get_prior(tauamyloid_formula_5,tauamyloid_data,gaussian())
tauamyloid_5=brm(tauamyloid_formula_5,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         #sample_prior = "only",
                         cores = 4,
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_5,"tauamyloid_5.rds")




model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,3)",
          class="sds"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
)
)
get_prior(tauamyloid_formula_6,tauamyloid_data,gaussian())
tauamyloid_6=brm(tauamyloid_formula_6,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior=model_prior,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_6,"tauamyloid_6.rds")

tauamyloid_7=brm(tauamyloid_formula_7,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         cores = 4,
                         prior=model_prior,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_7,"tauamyloid_7.rds")

model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,3)",
          class="sds"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
)
)
tauamyloid_8=brm(tauamyloid_formula_8,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
saveRDS(tauamyloid_8,"tauamyloid_8.rds")



add_comparisons=function(brms_model){
  brms_model=add_criterion(brms_model,"waic")
  brms_model=add_criterion(brms_model,"loo")
  brms_model$R2=bayes_R2(brms_model)
  brms_model$loo_R2=loo_R2(brms_model)
  return(brms_model)
}


tauamyloid_1=add_comparisons(tauamyloid_1)
tauamyloid_2=add_comparisons(tauamyloid_2)
tauamyloid_3=add_comparisons(tauamyloid_3)
tauamyloid_4=add_comparisons(tauamyloid_4)
tauamyloid_5=add_comparisons(tauamyloid_5)
tauamyloid_6=add_comparisons(tauamyloid_6)
tauamyloid_7=add_comparisons(tauamyloid_7)
tauamyloid_8=add_comparisons(tauamyloid_8)


tauamyloid_8=add_criterion(tauamyloid_8,"waic")
tauamyloid_8=add_criterion(tauamyloid_8,"loo")

tauamyloid_5$R2=bayes_R2(tauamyloid_5)
tauamyloid_8$R2=bayes_R2(tauamyloid_8)

saveRDS(tauamyloid_1,"tauamyloid_1.rds")
saveRDS(tauamyloid_2,"tauamyloid_2.rds")
saveRDS(tauamyloid_3,"tauamyloid_3.rds")
saveRDS(tauamyloid_4,"tauamyloid_4.rds")
saveRDS(tauamyloid_5,"tauamyloid_5.rds")
saveRDS(tauamyloid_6,"tauamyloid_6.rds")
saveRDS(tauamyloid_7,"tauamyloid_7.rds")
saveRDS(tauamyloid_8,"tauamyloid_8.rds")



loo_compare(tauamyloid_1,tauamyloid_2,tauamyloid_3,tauamyloid_4,tauamyloid_5,tauamyloid_6,tauamyloid_7,tauamyloid_8,criterion = "waic")
loo_compare(tauamyloid_1,tauamyloid_2,tauamyloid_3,tauamyloid_4,tauamyloid_5,tauamyloid_6,tauamyloid_7,tauamyloid_8,criterion = "loo")





tauamyloid_formula_9=bf(Load~1+Age_s+AmyloidPost+(1+Age_s+AmyloidPost|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_10=bf(Load~1+Age_s+AmyloidPost+Sex+(1+Age_s+AmyloidPost+Sex|IC)+(1+Age_s+Sex|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_11=bf(Load~1+Age_s+AmyloidPost+Sex+E4+(1+Age_s+AmyloidPost+Sex+E4|IC)+(1+Age_s+Sex+E4|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_12=bf(Load~1+Age_s+AmyloidPost+(1+Age_s|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_13=bf(Load~1+Age_s+(1+Age_s|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_15=bf(Load~1+Age_s+(1|IC)+(1|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))
tauamyloid_formula_14=bf(Load~1+Age_s+AmyloidPost+(1|IC)+(1+Age_s|dx_simple)+ (1 | subid_date),sigma~1+(1 | IC)+(1 | dx_simple))


model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
)
)


tauamyloid_9=brm(tauamyloid_formula_9,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_9=add_criterion(tauamyloid_9,"waic")
tauamyloid_9=add_criterion(tauamyloid_9,"loo")
tauamyloid_9$R2=bayes_R2(tauamyloid_9)
saveRDS(tauamyloid_9,"tauamyloid_9.rds")

tauamyloid_10=brm(tauamyloid_formula_10,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.10,max_treedepth = 15))
tauamyloid_10=add_criterion(tauamyloid_10,"waic")
tauamyloid_10=add_criterion(tauamyloid_10,"loo")
tauamyloid_10$R2=bayes_R2(tauamyloid_10)
saveRDS(tauamyloid_10,"tauamyloid_10.rds")

tauamyloid_11=brm(tauamyloid_formula_11,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.11,max_treedepth = 15))
tauamyloid_11=add_criterion(tauamyloid_11,"waic")
tauamyloid_11=add_criterion(tauamyloid_11,"loo")
tauamyloid_11$R2=bayes_R2(tauamyloid_11)
saveRDS(tauamyloid_11,"tauamyloid_11.rds")

tauamyloid_12=brm(tauamyloid_formula_12,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.12,max_treedepth = 15))
tauamyloid_12=add_criterion(tauamyloid_12,"waic")
tauamyloid_12=add_criterion(tauamyloid_12,"loo")
tauamyloid_12$R2=bayes_R2(tauamyloid_12)
saveRDS(tauamyloid_12,"tauamyloid_12.rds")

tauamyloid_13=brm(tauamyloid_formula_13,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.13,max_treedepth = 15))
tauamyloid_13=add_criterion(tauamyloid_13,"waic")
tauamyloid_13=add_criterion(tauamyloid_13,"loo")
tauamyloid_13$R2=bayes_R2(tauamyloid_13)
saveRDS(tauamyloid_13,"tauamyloid_13.rds")

tauamyloid_14=brm(tauamyloid_formula_14,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.14,max_treedepth = 15))
tauamyloid_14=add_criterion(tauamyloid_14,"waic")
tauamyloid_14=add_criterion(tauamyloid_14,"loo")
tauamyloid_14$R2=bayes_R2(tauamyloid_14)
saveRDS(tauamyloid_14,"tauamyloid_14.rds")






model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"))

tauamyloid_15=brm(tauamyloid_formula_15,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.15,max_treedepth = 15))
tauamyloid_15=add_criterion(tauamyloid_15,"waic")
tauamyloid_15=add_criterion(tauamyloid_15,"loo")
tauamyloid_15$R2=bayes_R2(tauamyloid_15)
saveRDS(tauamyloid_15,"tauamyloid_15.rds")








tauamyloid_formula_16=bf(Load~1+Age_s+AmyloidPost+(1+Age_s+AmyloidPost|dx_simple)+(1|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
get_prior(tauamyloid_formula_16,tauamyloid_data,gaussian())
model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
))

tauamyloid_16=brm(tauamyloid_formula_16,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #ample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_16=add_criterion(tauamyloid_16,"waic")
tauamyloid_16=add_criterion(tauamyloid_16,"loo")
tauamyloid_16$R2=bayes_R2(tauamyloid_16)
saveRDS(tauamyloid_16,"tauamyloid_16.rds")



tauamyloid_formula_17=bf(Load~1+Age_s+AmyloidPost+Sex+(1+Age_s+Sex+AmyloidPost|dx_simple)+(1|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tauamyloid_17=brm(tauamyloid_formula_17,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_17=add_criterion(tauamyloid_17,"waic")
tauamyloid_17=add_criterion(tauamyloid_17,"loo")
tauamyloid_17$R2=bayes_R2(tauamyloid_17)
saveRDS(tauamyloid_17,"tauamyloid_17.rds")


tauamyloid_formula_18=bf(Load~1+Age_s+AmyloidPost+Sex+E4+(1+Age_s+Sex+AmyloidPost+E4|dx_simple)+(1|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tauamyloid_18=brm(tauamyloid_formula_18,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_18=add_criterion(tauamyloid_18,"waic")
tauamyloid_18=add_criterion(tauamyloid_18,"loo")
tauamyloid_18$R2=bayes_R2(tauamyloid_18)
saveRDS(tauamyloid_18,"tauamyloid_18.rds")



tauamyloid_formula_19=bf(Load~1+Age_s+AmyloidPost+Sex+E4+(1+Age_s+Sex+AmyloidPost+E4|dx_simple)+(1+Sex|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tauamyloid_19=brm(tauamyloid_formula_19,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_19=add_criterion(tauamyloid_19,"waic")
tauamyloid_19=add_criterion(tauamyloid_19,"loo")
tauamyloid_19$R2=bayes_R2(tauamyloid_19)
saveRDS(tauamyloid_19,"tauamyloid_19.rds")

tauamyloid_19









model_prior<-c(set_prior("normal(0,2)",
                         class="Intercept"
),
set_prior("normal(0,2)",
          class="b"
),
set_prior("normal(0,1)",
          class="sd",
          group = "subid_date"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC"),
set_prior("normal(0,1)",
          class="Intercept",
          dpar="sigma"
),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple:IC",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple",
          dpar="sigma"),
set_prior("normal(0,1)",
          class="sd",
          group = "dx_simple"),
set_prior("lkj(4)",
          class="cor"
),
set_prior("normal(0,3)",
          class="sds")
)



tauamyloid_formula_20=bf(Load~1+Age_s+Sex+s(AmyloidPost,k=6)+(1+Age_s+Sex|dx_simple)+(1+Age_s+Sex|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tauamyloid_20=brm(tauamyloid_formula_20,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_20=add_criterion(tauamyloid_20,"waic")
tauamyloid_20=add_criterion(tauamyloid_20,"loo")
tauamyloid_20$R2=bayes_R2(tauamyloid_20)
saveRDS(tauamyloid_20,"tauamyloid_20.rds")




tauamyloid_formula_21=bf(Load~1+Age_s+Sex+s(AmyloidPost,k=6)+(1+Age_s+Sex+AmyloidPost|dx_simple)+(1+Age_s+Sex|dx_simple:IC)+ (1 | subid_date),sigma~1+(1 | dx_simple)+(1 | dx_simple:IC))
tauamyloid_21=brm(tauamyloid_formula_21,
                         tauamyloid_data,
                         gaussian(),
                         chains = 4,
                         prior=model_prior,
                         cores = 4,
                         #sample_prior = "only",
                         iter = 4000,
                         warmup = 1500,
                         control = list(adapt_delta = 0.9,max_treedepth = 15))
tauamyloid_21=add_criterion(tauamyloid_21,"waic")
tauamyloid_21=add_criterion(tauamyloid_21,"loo")
tauamyloid_21$R2=bayes_R2(tauamyloid_21)
saveRDS(tauamyloid_21,"tauamyloid_21.rds")



loo_compare(tauamyloid_1,tauamyloid_2,tauamyloid_3,tauamyloid_4,tauamyloid_5,tauamyloid_6,tauamyloid_7,tauamyloid_8,tauamyloid_20,criterion = "waic")


```


(3) Longitudinal model
```{r}
# Read the longitudinal data
longitudinal_data=read_rds('long_pibtau_both_three_fmri_final.rds')

longitudinal_data_subset=longitudinal_data %>%
  select(id=subid,time=pibtime,visit=visit_three,temporal_tau=Tau_IC_10,amyloid=Amyloid_IC_6) %>%
  group_by(id) %>%
  mutate(temporal_tau_mu=mean(temporal_tau))

model_formula=bf(amyloid~1+time*temporal_tau_mu+temporal_tau+(1 + time | id))

get_prior(model_formula,longitudinal_data_subset,gaussian())

prior = c(prior(student_t(3, 0, 3), class = "Intercept"),
                prior(student_t(3, 0, 3),    class = b),
                prior(student_t(3, 0, 3), class = sd),
                prior(student_t(3, 0, 3), class = sigma),
                prior(lkj(4), class = cor))

longit_model_amyloid=brm(model_formula,
                         longitudinal_data_subset,
                         gaussian(),
                         prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))



beta_higher=spread_draws(longit_model_amyloid,b_Intercept, b_time,r_id[subject,termHigher])

p=longitudinal_data_subset %>%
  ungroup() %>%
  select(id,temporal_tau_mu) %>%
  mutate(subject=(as.integer(id))) %>%
  select(-id)

png(filename = "Gradient_3_compressed.png",res = 500, units = "in",width = 4,height = 6,type = "cairo")
beta_higher %>% 
  ungroup() %>%
  group_by(subject) %>%
  summarise(Median=median(Beta1),Lower=quantile(Beta1,0.05),Upper=quantile(Beta1,0.95)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:42))) %>%
  merge(p,by = "subject") %>%
  as_tibble() %>%
  ggplot(aes(x=reorder(SubNo,temporal_tau_mu),y=Median,ymin=Lower,ymax=Upper,color=Median)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=3, name="YlOrRd"),name="temporal_tau_mu",values = seq(from=min(p$temporal_tau_mu)*1.01,to = max(p$temporal_tau_mu)*1.01,length.out = 3))+
  scale_color_distiller(palette = "YlOrRd",direction = 1)+
  theme_black()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')
dev.off()


longit_model_amyloid_fitted=fitted(longit_model_amyloid,nsamples = 1000,summary = F)

longit_model_amyloid$data

longit_model_amyloid_draws=add_fitted_draws(longit_model_amyloid$data,longit_model_amyloid)

delta_funtion=function(timecol,valcol){
  delta=(valcol[2]-valcol[1])/(timecol[2]-timecol[1])
}

longit_model_amyloid_delta=longit_model_amyloid_draws %>%
  group_by(id) %>%
  mutate(Timepoint=ifelse(time==min(time),"One",ifelse(time==max(time),"Three","Two"))) %>%
  select(-.chain,-.iteration) %>%
  filter(!Timepoint=="Two") %>% 
  group_by(id,.draw,temporal_tau_mu) %>%
  summarise(delta_amyloid=(last(.value)-first(.value))/(last(time)-first(time)),
            time_min=min(time),time_max=max(time))
  

longit_model_amyloid_delta %>%
  ungroup() %>%
  group_by(id) %>%
  summarise(Median=median(delta_amyloid),Lower=quantile(delta_amyloid,0.05),Upper=quantile(delta_amyloid,0.95),temporal_tau_mu=unique(temporal_tau_mu)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:42))) %>%
  as_tibble() %>%
  ggplot(aes(x=reorder(SubNo,Lower),y=Median,ymin=Lower,ymax=Upper,color=temporal_tau_mu)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=3, name="YlOrRd"),name="temporal_tau_mu",values = seq(from=min(p$temporal_tau_mu)*1.01,to = max(p$temporal_tau_mu)*1.01,length.out = 3))+
  scale_color_distiller(palette = "YlOrRd",direction = 1)+
  theme_black()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')





## That's not really working. Let's fit separate LME models for amyloid and tau and then look at those that reliably increase in amyloid, tau, both, or neither
longitudinal_data_subset=longitudinal_data %>%
  select(id=subid,time=pibtime,visit=visit_three,Amyloid_IC_3,Amyloid_IC_4,Amyloid_IC_6) %>%
  gather(IC,Load,starts_with("Amyloid_IC"))

model_formula=bf(Load~1+time+(1 + time | id)+(1 + time | id:IC))

get_prior(model_formula,longitudinal_data_subset,gaussian())

prior = c(prior(student_t(3, 0, 3), class = "Intercept"),
                prior(student_t(3, 0, 3),    class = b),
                prior(student_t(3, 0, 3), class = sd),
                prior(student_t(3, 0, 3), class = sigma),
                prior(lkj(4), class = cor))

longit_model_amyloid=brm(model_formula,
                         longitudinal_data_subset,
                         gaussian(),
                         prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))








# -29, -31
#-33, -35, -13

longitudinal_data_subset=longitudinal_data %>%
  select(id=subid,time=tautime,visit=visit_three,Tau_IC_9,Tau_IC_10,Tau_IC_11,Tau_IC_19, Tau_IC_20, Tau_IC_21, Tau_IC_41,Tau_IC_4,Tau_IC_8,Tau_IC_33,Tau_IC_35,Tau_IC_13) %>%
  gather(IC,Load,starts_with("Tau_IC"))

model_formula=bf(Load~1+time+(1 + time | id)+(1 + time | id:IC))

prior = c(prior(student_t(3, 0, 3), class = "Intercept"),
                prior(student_t(3, 0, 3),    class = b),
                prior(student_t(3, 0, 3), class = sd),
                prior(student_t(3, 0, 3), class = sigma),
                prior(lkj(4), class = cor))

longit_model_tau=brm(model_formula,
                         longitudinal_data_subset,
                         gaussian(),
                         prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))






beta_higher=spread_draws(longit_model_amyloid,b_Intercept, b_time,r_id[subject,termHigher])
beta_higher=beta_higher %>% filter(termHigher=="time") %>%
  group_by(.chain,.iteration,.draw,subject) %>%
  mutate(Beta1=b_time+r_id)

beta_lower=spread_draws(longit_model_amyloid,`r_id:IC`[subjectIC,termLower])
beta_lower=beta_lower %>%
  filter(termLower=="time") %>% 
  mutate(subject=as.integer(substr(subjectIC,1,8))) %>%
  mutate(IC=str_extract(subjectIC,"Amyloid_IC_[0-9]+")) %>%
  mutate(Beta2=`r_id:IC`)  %>%
  ungroup() %>%
  select(subject,.chain,.iteration,.draw,IC,Beta2) %>%
  spread(IC,Beta2) %>%
  ungroup()

beta_all=beta_higher %>%
  ungroup() %>%
  merge(beta_lower,by=c(".chain",".iteration",".draw","subject")) %>%
  as_tibble() %>%
  gather(IC,Beta2,starts_with("Amyloid_IC")) %>%
  mutate(Beta_final=Beta1+Beta2) 

amyloid_plot=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95)) %>%
  filter(Median==max(Median)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:42))) %>%
  #merge(p,by = "subject") %>%
  as_tibble() %>%
  group_by(SubNo) %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup() %>%
  ggplot(aes(x=SubNo,y=Median,ymin=Lower,ymax=Upper,color=Sig)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=8, name="YlOrRd"),name="Dwell Time",values = c(0,1/8,2/8,3/8,4/8,5/8,6/8,7/8,1))+
  theme_fivethirtyeight()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')+
  ylab('Gradient of maximally increasing component')

amyloid_table=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95),sub=first(subject)) %>%
  ungroup() %>%
  as_tibble() %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup()

amyloid_table %>%
  filter(Sig=="yes") %>%
  select(IC) %>%
  group_by(IC) %>%
  add_count() %>%
  distinct()



beta_higher=spread_draws(longit_model_tau,b_Intercept, b_time,r_id[subject,termHigher])
beta_higher=beta_higher %>% filter(termHigher=="time") %>%
  group_by(.chain,.iteration,.draw,subject) %>%
  mutate(Beta1=b_time+r_id)

beta_lower=spread_draws(longit_model_tau,`r_id:IC`[subjectIC,termLower])
beta_lower=beta_lower %>%
  filter(termLower=="time") %>% 
  mutate(subject=as.integer(substr(subjectIC,1,8))) %>%
  mutate(IC=str_extract(subjectIC,"Tau_IC_[0-9]+")) %>%
  mutate(Beta2=`r_id:IC`)  %>%
  ungroup() %>%
  select(subject,.chain,.iteration,.draw,IC,Beta2) %>%
  spread(IC,Beta2) %>%
  ungroup()

beta_all=beta_higher %>%
  ungroup() %>%
  merge(beta_lower,by=c(".chain",".iteration",".draw","subject")) %>%
  as_tibble() %>%
  gather(IC,Beta2,starts_with("Tau_IC")) %>%
  mutate(Beta_final=Beta1+Beta2) 

tau_plot=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95)) %>%
  filter(Median==max(Median)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:42))) %>%
  #merge(p,by = "subject") %>%
  as_tibble() %>%
  group_by(SubNo) %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup() %>%
  ggplot(aes(x=SubNo,y=Median,ymin=Lower,ymax=Upper,color=Sig)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=8, name="YlOrRd"),name="Dwell Time",values = c(0,1/8,2/8,3/8,4/8,5/8,6/8,7/8,1))+
  theme_fivethirtyeight()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')+
  ylab('Gradient of maximally increasing component')

tau_table=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95),sub=first(subject)) %>%
  ungroup() %>%
  as_tibble() %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup()

tau_table %>%
  filter(Sig=="yes") %>%
  select(IC) %>%
  group_by(IC) %>%
  add_count() %>%
  distinct()


both_table=tau_table %>%
  select(subject,MedianTau=Median,LowerTau=Lower,UpperTau=Upper,SigTau=Sig,TauIC=IC,everything()) %>%
  select(-sub) %>%
  left_join((amyloid_table %>% select(-sub,subject,MedianAmyloid=Median,LowerAmyloid=Lower,UpperAmyloid=Upper,SigAmyloid=Sig,AmyloidIC=IC,everything())),by="subject")
  



longitudinal_data %>%
  mutate(visit=as.factor(visit_three),subject=as.integer(subid)) %>%
  ungroup() %>%
  select(subject,Tau=Tau_IC_41,Amyloid=Amyloid_IC_6,visit) %>%
  left_join((both_table %>% filter(TauIC=="Tau_IC_41",AmyloidIC=="Amyloid_IC_6") %>% select(subject,MedianTau,MedianAmyloid,SigTau,SigAmyloid)),by="subject") %>%
  mutate(Sig=ifelse(SigTau=="yes" & SigAmyloid=="yes","both",
                    ifelse(SigTau=="no" & SigAmyloid=="yes","amyloid",
                           ifelse(SigTau=="yes" & SigAmyloid=="no","tau",
                                  "neither")))) %>%
  ggplot(aes(Tau,Amyloid,color=Sig,shape=visit,group=subject))+
  geom_point(size=2.5)+
  geom_path(size=1)+
  scale_shape_manual(values = c(21,20,17))+
  theme_fivethirtyeight()+
  scale_color_manual(values = c('#009292','#920000','#000000',"#DB6D00"))
  





hb_colorblind<-c('#B66DFF',
                 '#490092',
                 
                 '#009292',
                 '#006DDB',
                 
                 '#000000',
                 
                 '#920000',
                 '#924900',
                 '#FF6DB6',
                 
                 "#DB6D00")






amyloid_plot + tau_plot




```

Now with updated longitudinal data:

```{r}
library(lubridate)

tau_long=read_csv('SBM_42_ica_42_components_results_new.csv')

tau_long_data=tau_long %>%
  mutate(Subject=str_extract(Filename,"(?<=Scaled_P_)[0-9]+"),
         taudate=str_extract(Filename,"(?<=Scaled_P_[0-9]{0,10}_)[0-9]{0,8}")) %>%
  select(Subject,taudate,Tau_IC_9,Tau_IC_10,Tau_IC_11,Tau_IC_19, Tau_IC_20, Tau_IC_21, Tau_IC_41,Tau_IC_4,Tau_IC_8,Tau_IC_33,Tau_IC_35,Tau_IC_13) %>%
  filter(!Subject=="01561949") %>%
  group_by(Subject) %>%
  add_count() %>%
  filter(n>2) %>%
  mutate(TimeCenter=ymd(first(taudate))+(difftime(ymd(last(taudate)),ymd(first(taudate))))/2) %>%
  mutate(tautime=as.numeric(as.duration(difftime(ymd(taudate),TimeCenter)),"years")) %>%
  mutate(tautime_s=center(tautime)) %>%
  select(Subject,taudate,TimeCenter,tautime,tautime_s,everything()) %>%
  gather(IC,Load,starts_with("Tau_IC")) %>%
  select(id=Subject, time=tautime_s, everything()) %>%
  ungroup()


center=function(x){
  p=(x-mean(x))
  return(p)
}

 
  
model_formula=bf(Load~1+time+(1 + time | id)+(1 + time | id:IC))

prior = c(prior(student_t(3, 0, 3), class = "Intercept"),
                prior(student_t(3, 0, 3),    class = b),
                prior(student_t(3, 0, 3), class = sd),
                prior(student_t(3, 0, 3), class = sigma),
                prior(lkj(4), class = cor))

longit_model_tau_new=brm(model_formula,
                         tau_long_data,
                         gaussian(),
                         prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))



beta_higher=spread_draws(longit_model_tau_new,b_Intercept, b_time,r_id[subject,termHigher])
beta_higher=beta_higher %>% filter(termHigher=="time") %>%
  group_by(.chain,.iteration,.draw,subject) %>%
  mutate(Beta1=b_time+r_id)

beta_lower=spread_draws(longit_model_tau_new,`r_id:IC`[subjectIC,termLower])
beta_lower=beta_lower %>%
  filter(termLower=="time") %>% 
  mutate(subject=as.integer(substr(subjectIC,1,8))) %>%
  mutate(IC=str_extract(subjectIC,"Tau_IC_[0-9]+")) %>%
  mutate(Beta2=`r_id:IC`)  %>%
  ungroup() %>%
  select(subject,.chain,.iteration,.draw,IC,Beta2) %>%
  spread(IC,Beta2) %>%
  ungroup()

beta_all=beta_higher %>%
  ungroup() %>%
  merge(beta_lower,by=c(".chain",".iteration",".draw","subject")) %>%
  as_tibble() %>%
  gather(IC,Beta2,starts_with("Tau_IC")) %>%
  mutate(Beta_final=Beta1+Beta2) 

tau_plot=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95)) %>%
  filter(Lower==max(Lower)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:61))) %>%
  #merge(p,by = "subject") %>%
  as_tibble() %>%
  group_by(SubNo) %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup() %>%
  ggplot(aes(x=reorder(SubNo,Median),y=Median,ymin=Lower,ymax=Upper,color=Sig)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=8, name="YlOrRd"),name="Dwell Time",values = c(0,1/8,2/8,3/8,4/8,5/8,6/8,7/8,1))+
  theme_fivethirtyeight()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')+
  ylab('Gradient of maximally increasing component')


tau_table=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.1),Upper=quantile(Beta_final,0.95),sub=first(subject)) %>%
  ungroup() %>%
  as_tibble() %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup()







amyloid_long=read_csv('SBM_7_ica_7_components_results_new.csv')

amyloid_long_data=amyloid_long %>%
  mutate(Subject=str_extract(Filename,"(?<=Scaled_P_)[0-9]+"),
         pibdate=str_extract(Filename,"(?<=Scaled_P_[0-9]{0,10}_)[0-9]{0,8}")) %>%
  select(Subject,pibdate,Amyloid_IC_3,Amyloid_IC_4,Amyloid_IC_6) %>%
  filter(!Subject=="01561949") %>%
  group_by(Subject) %>%
  add_count() %>%
  filter(n>2) %>%
  mutate(TimeCenter=ymd(first(pibdate))+(difftime(ymd(last(pibdate)),ymd(first(pibdate))))/2) %>%
  mutate(pibtime=as.numeric(as.duration(difftime(ymd(pibdate),TimeCenter)),"years")) %>%
  mutate(pibtime_s=center(pibtime)) %>%
  select(Subject,pibtime,TimeCenter,pibtime_s,everything()) %>%
  gather(IC,Load,starts_with("Amyloid_IC")) %>%
  select(id=Subject, time=pibtime_s, everything()) %>%
  ungroup()


center=function(x){
  p=(x-mean(x))
  return(p)
}

 
  
model_formula=bf(Load~1+time+(1 + time | id)+(1 + time | id:IC))

prior = c(prior(student_t(3, 0, 3), class = "Intercept"),
                prior(student_t(3, 0, 3),    class = b),
                prior(student_t(3, 0, 3), class = sd),
                prior(student_t(3, 0, 3), class = sigma),
                prior(lkj(4), class = cor))

amyloid_model_tau_new=brm(model_formula,
                         amyloid_long_data,
                         gaussian(),
                         prior=prior,
                         #sample_prior = "only",
                         chains = 4,
                         cores = 4,
                         iter = 3000,
                         warmup = 1000,
                         control = list(adapt_delta = 0.95,max_treedepth = 15))


beta_higher=spread_draws(amyloid_model_tau_new,b_Intercept, b_time,r_id[subject,termHigher])
beta_higher=beta_higher %>% filter(termHigher=="time") %>%
  group_by(.chain,.iteration,.draw,subject) %>%
  mutate(Beta1=b_time+r_id)

beta_lower=spread_draws(amyloid_model_tau_new,`r_id:IC`[subjectIC,termLower])
beta_lower=beta_lower %>%
  filter(termLower=="time") %>% 
  mutate(subject=as.integer(substr(subjectIC,1,8))) %>%
  mutate(IC=str_extract(subjectIC,"Amyloid_IC_[0-9]+")) %>%
  mutate(Beta2=`r_id:IC`)  %>%
  ungroup() %>%
  select(subject,.chain,.iteration,.draw,IC,Beta2) %>%
  spread(IC,Beta2) %>%
  ungroup()

beta_all=beta_higher %>%
  ungroup() %>%
  merge(beta_lower,by=c(".chain",".iteration",".draw","subject")) %>%
  as_tibble() %>%
  gather(IC,Beta2,starts_with("Amyloid_IC")) %>%
  mutate(Beta_final=Beta1+Beta2) 

amyloid_plot=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.05),Upper=quantile(Beta_final,0.95)) %>%
  filter(Lower==max(Lower)) %>%
  ungroup() %>%
  mutate(SubNo=paste0("Sub",c(1:61))) %>%
  #merge(p,by = "subject") %>%
  as_tibble() %>%
  group_by(SubNo) %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup() %>%
  ggplot(aes(x=reorder(SubNo,Lower),y=Median,ymin=Lower,ymax=Upper,color=Sig)) +
  geom_pointinterval(size=5) +
  #scale_color_gradientn(colours=brewer.pal(n=8, name="YlOrRd"),name="Dwell Time",values = c(0,1/8,2/8,3/8,4/8,5/8,6/8,7/8,1))+
  theme_fivethirtyeight()+
  coord_flip() +
  geom_hline(yintercept = 0,color="white")+
  xlab('')+
  ylab('Gradient of maximally increasing component')


amyloid_table=beta_all %>% group_by(subject,IC) %>%
  summarise(Median=median(Beta_final),Lower=quantile(Beta_final,0.1),Upper=quantile(Beta_final,0.95),sub=first(subject)) %>%
  ungroup() %>%
  as_tibble() %>%
  mutate(Sig=ifelse(Lower>0,"yes","no")) %>%
  ungroup()



a=amyloid_long %>%
  mutate(Subject=str_extract(Filename,"(?<=Scaled_P_)[0-9]+"),
         pibdate=str_extract(Filename,"(?<=Scaled_P_[0-9]{0,10}_)[0-9]{0,8}")) %>%
  select(Subject,pibdate,Amyloid_IC_3,Amyloid_IC_4,Amyloid_IC_6) %>%
  group_by(Subject) %>%
  add_count() %>%
  filter(n>2) %>%
  mutate(visit=1:n()) %>%
  ungroup()

t=tau_long %>%
  mutate(Subject=str_extract(Filename,"(?<=Scaled_P_)[0-9]+"),
         taudate=str_extract(Filename,"(?<=Scaled_P_[0-9]{0,10}_)[0-9]{0,8}")) %>%
  select(Subject,taudate,Tau_IC_9,Tau_IC_10,Tau_IC_11,Tau_IC_19, Tau_IC_20, Tau_IC_21, Tau_IC_41,Tau_IC_4,Tau_IC_8,Tau_IC_33,Tau_IC_35,Tau_IC_13) %>%
  group_by(Subject) %>%
  add_count() %>%
  filter(n>2) %>%
  mutate(visit=1:n()) %>%
  ungroup()




both_table=tau_table %>%
  select(subject,MedianTau=Median,LowerTau=Lower,UpperTau=Upper,SigTau=Sig,TauIC=IC,everything()) %>%
  select(-sub) %>%
  left_join((amyloid_table %>% select(-sub,subject,MedianAmyloid=Median,LowerAmyloid=Lower,UpperAmyloid=Upper,SigAmyloid=Sig,AmyloidIC=IC,everything())),by="subject")
 

tau_table %>%
  filter(subject=="1067619")


left_join(a,t,by=c("Subject","visit")) %>%
  filter(!Subject=="01561949") %>%
  mutate(Subject=as.integer(Subject)) %>%
  mutate(Amyloid=Amyloid_IC_6,Tau=Tau_IC_10) %>%
  left_join((both_table %>% filter(TauIC=="Tau_IC_10",AmyloidIC=="Amyloid_IC_6") %>% select(Subject=subject,MedianTau,MedianAmyloid,SigTau,SigAmyloid)),by="Subject") %>%
  mutate(Sig=ifelse(SigTau=="yes" & SigAmyloid=="yes","both",
                    ifelse(SigTau=="no" & SigAmyloid=="yes","amyloid",
                           ifelse(SigTau=="yes" & SigAmyloid=="no","tau",
                                  "neither")))) %>%
  #filter(Subject %in% unique(.$Subject)[3]) %>%
  group_by(Subject) %>%
  mutate(maxV=max(visit)) %>%
  mutate(hackShape=ifelse(visit==maxV,"triangle","circle")) %>%
  ggplot(aes(Tau,Amyloid,color=Sig,shape=hackShape,group=Subject))+
  geom_point(size=2.5)+
  geom_path(size=1,alpha=0.5)+
  scale_shape_manual(values = c(21,17),drop="false",guide = 'none')+
  theme_fivethirtyeight()+
  scale_color_manual(values = c('#009292','#920000','#000000',"#DB6D00"), name="Reliable rise",drop="false") +
  xlab("Temporal Tau") +
  ylab("Amyloid") +
  theme(axis.title = element_text(face = "bold"))

library(ggthemes)
tau_long_data %>%
  group_by(id,IC) %>%
  summarise(Var=sd(Load)) %>%
  arrange(-Var)



conds=tau_long_data %>%
  select(id,IC) %>%
  filter(id=="00391133")

conditional_effects(longit_model_tau_new,re_formula = NULL,effects = "time", conditions = conds,nsamples=100,spaghetti = T,theme="theme_classic") %>% plot(points=T)

```



# Validation
(1) Single subject quantification in ATA  *Done*
(2) Correlation with clinical metrics in ATA  *Done*
(3) Tau models in ADNI
(4) Amyloid-tau cross sectional model using centilloids
(5) Predicting simple diagnosis









